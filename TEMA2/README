Minea Alexandra 342C3 - TEMA 2

Rulare:
    In radacina proiectului:
    $ docker-compose up

Structura si design:
    Pyhton - Flask/SQLAlchemy + MySQL
    Priectul are 3 componente importante: baza de date(MySQL), API-ul pentru gestiunea cererilor si utilitarul pentru baza de date.
    Baza de date:
        Am ales sa folosesc serverul de MySQL, deoarece am mai lucrat cu el si in alte aplicatii.
        Baza de date este initializata de baza unui script: db/init.sql.
        Gestiunea acesteia se realizeaza cu ajutorul unui ORM (SQLAlchemy).
    API gestiune: (app/app.py)
        Pentru fiecare ruta in parte (specificata in enunt) se trateaza cazurile de eroare si se updateaza
        rezultatele in baza de date (acolo unde este cazul).
        Observatii:
            - Timestamp-ul pentru temperaturi se salveaza in baza de date in format YYYY-MM-DD HH:MM:ss =>
            atunci cand se face o verificare pentru temperaturi inregistrate pana la o anumita data, aceasta
            nu va include ziua respectiva. (ex: pana la 2020-12-02 inseamna pana la 2020-12-02 00:00:00)

    Docker:
        docker-compose.yml:
            - db = baza de bate
                - pentru persistenta datelor folosesc volumul mysql_data
                - pentru initializare: ./db:/docker-entrypoint-initdb.d

            - server = API-ul
                - accesibil pe localhost:5000
                - se face build din folderul app -> unde se afla Dockerfile-ul si requirements.txt

            - adminer -> utilitarul pentru daza de date
                - accesibil pe localhost:8080
                - username: root
                - parola: root
                - baza de date: countries_db
            
        retele:
            - exista 2 retele: db-adminer si db-api(cu nume sugestive pentru separarea containerelor)
            - numele containerelor: 
                db -> database
                server -> server
                adminer -> adminer
            - am testat configuratia dns cu urmatoarele comenzi:
                $ docker exec -ti server ping database
                $ docker exec -u 0 -ti adminer ping database

        variabile de mediu:
            - MYSQL_ROOT_PASSWORD: root (pentru baza de date)

Pentru testare am pus la dispozitie si un client scris in python (el nu se afla inclus in proiect).
In el am incercat sa cuprind toate cazurile (comportare normala/ erori/ corner case-uri) de functionare
a aplicatiei.